#include <SPI.h> // Giao tiếp SPI với module RFID RC522
#include <MFRC522.h> // Điều khiển đầu đọc thẻ RFID
#include <Keypad.h> // Dùng cho bàn phím 4x3
#include <Wire.h> // Giao tiếp I2C
#include <LiquidCrystal_I2C.h> // Điều khiển màn hình LCD I2C
#include <EEPROM.h> // Ghi/đọc dữ liệu vĩnh viễn

#define SS_PIN 10 // Chân kết nối SS của module RFID
#define RST_PIN 9 // Chân reset module RFID
#define ROW_NUM 4 // Số hàng keypad
#define COL_NUM 3 // Số cột keypad
#define UID_ADDR 0 // Địa chỉ EEPROM bắt đầu lưu UID RFID
#define PASS_ADDR 100 // Địa chỉ EEPROM bắt đầu lưu mật khẩu
#define MAX_UIDS 5 // Tối đa 5 UID RFID được lưu
#define MAX_PASS 5 // Tối đa 5 mật khẩu được lưu
#define UID_SIZE 4 // Kích thước mỗi UID RFID là 4 byte
#define BUTTON_PIN A0 // Chân nút nhấn mở cửa

// KHAI BÁO RFID
MFRC522 mfrc522(SS_PIN, RST_PIN);// tạo RFID
LiquidCrystal_I2C lcd(0x27, 16, 2); // tạo LCD 16x2 I2C tại địa chỉ 0x27

// CẤU HÌNH BÀN PHÍM KEYAD 4x3 
char keys[ROW_NUM][COL_NUM] = {
{'1', '2', '3'},
{'4', '5', '6'},
{'7', '8', '9'},
{'*', '0', '#'}
};

byte rowPins[ROW_NUM] = {8, 7, 6, 5}; // Các chân nối hàng
byte colPins[COL_NUM] = {4, 3, 2}; // Các chân nối cột

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROW_NUM, COL_NUM);

int uidCount = 0; // Số UID đã lưu
int passCount = 0; // Số mật khẩu đã lưu
int openCount = 0; // Số lần mở cửa

//  HÀM SETUP 
void setup() {
Serial.begin(9600); 
SPI.begin(); 
mfrc522.PCD_Init(); // Khởi động đầu đọc RFID
lcd.init(); lcd.backlight(); // Bật LCD

pinMode(BUTTON_PIN, INPUT_PULLUP); // Cấu hình nút nhấn với điện trở kéo lên

 // Đọc số lượng UID đã lưu từ EEPROM
 uidCount = EEPROM.read(UID_ADDR + (MAX_UIDS * UID_SIZE));
 if (uidCount > MAX_UIDS) uidCount = 0;

// Đọc số lượng mật khẩu đã lưu từ EEPROM
passCount = EEPROM.read(PASS_ADDR + (MAX_PASS * 6));
if (passCount > MAX_PASS) passCount = 0;

showMainMenu(); // Hiển thị menu chính
}
bool skipFirstButtonCheck = true;
// VÒNG LẶP CHÍNH 
void loop() {
 char key = keypad.getKey();
 if (key) {
 switch (key) {
 case '1': checkRFID(); break; // Kiểm tra mở bằng thẻ RFID
 case '2': checkPassword(); break; // Kiểm tra mở bằng mật khẩu
 case '3': showManageMenu(); break;  // Vào menu Thêm/Xóa
 case '4': showOpenCount(); break; // Hiển thị số lần mở cửa
 }
 }

 // Xử lý nút nhấn mở cửa
 static bool lastButtonState = HIGH;
 bool currentState = digitalRead(BUTTON_PIN);
 if (skipFirstButtonCheck) {
  skipFirstButtonCheck = false;
  lastButtonState = currentState;
  return; // bỏ qua lần kiểm tra đầu tiên
 }
 if (lastButtonState == HIGH && currentState == LOW) {
 delay(1000); 
  if (digitalRead(BUTTON_PIN) == LOW) {
   openCount++;
   openDoor();
  }
 }
 lastButtonState = currentState;
}

//  MENU CHÍNH 
void showMainMenu() {
 lcd.clear();
 lcd.setCursor(0, 0); lcd.print("1.The 2.Pass");
 lcd.setCursor(0, 1); lcd.print("3.Them/Xoa 4.Xem");
}

// KIỂM TRA RFID 
void checkRFID() {
 lcd.clear(); lcd.print("Quet the:");
 lcd.setCursor(0, 1); lcd.print("*=Huy");

 unsigned long start = millis();
 while (millis() - start < 10000) {  // giới hạn 10 giây quét thẻ
  char key = keypad.getKey();
  if (key == '*') {
   lcd.clear(); lcd.print("Huy quet the");
   delay(1000);
   showMainMenu();
   return;
  }
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
   bool found = false;
   for (int i = 0; i < uidCount; i++) {
    bool match = true;
    for (int j = 0; j < UID_SIZE; j++) {
     if (EEPROM.read(UID_ADDR + i * UID_SIZE + j) != mfrc522.uid.uidByte[j]) {
      match = false;
      break;
     }
    }
    if (match) {
     found = true;
     break;
    }
  }
 mfrc522.PICC_HaltA();
 if (found) {
 openCount++;
 openDoor();
 } else {
 lcd.clear(); lcd.print("The sai!");
 delay(2000);
 showMainMenu();
 }
 return;
  }
 }
 lcd.clear(); lcd.print("Het thoi gian");
 delay(1000);
 showMainMenu();
}

// KIỂM TRA MẬT KHẨU
void checkPassword() {
 lcd.clear(); lcd.print("Nhap pass:");
 String input = "";
while (input.length() < 6) {
 char key = keypad.getKey();
 if (key == '*') {
  lcd.clear(); lcd.print("Huy nhap pass");
  delay(1000);
  showMainMenu();
  return;
 }
 if (key && key != '#') {
  input += key;
  lcd.setCursor(input.length() - 1, 1); lcd.print("*");
 }
}

 bool found = false;
 for (int i = 0; i < passCount; i++) {
  String storedPass = "";
  for (int j = 0; j < 6; j++) {
   storedPass += (char)EEPROM.read(PASS_ADDR + i * 6 + j);
  }
  if (storedPass == input) {
   found = true;
   break;
  }
 }

 if (found) {
  openCount++;
  openDoor();
 } else {
  lcd.clear(); lcd.print("Pass sai!");
  delay(2000);
  showMainMenu();
 }
}

// MENU THÊM/XÓA 
void showManageMenu() {
 lcd.clear();
 lcd.setCursor(0, 0); lcd.print("1.Them 2.Xoa");
 lcd.setCursor(0, 1); lcd.print("*=Back");
 while (true) {
  char key = keypad.getKey();
  if (key == '1') { showAddMenu(); break; }
  if (key == '2') { showRemoveMenu(); break; }
  if (key == '*') { showMainMenu(); break; }
 }
}

// MENU THÊM 
void showAddMenu() {
 lcd.clear();
 lcd.setCursor(0, 0); lcd.print("1.The 2.Pass");
 lcd.setCursor(0, 1); lcd.print("*=Back");

 while (true) {
  char key = keypad.getKey();
  if (key == '1') { addRFID(); return; }
  if (key == '2') { addPassword(); return; }
  if (key == '*') { showManageMenu(); return; }
 }
}

//  MENU XÓA
void showRemoveMenu() {
 lcd.clear(); 
 lcd.setCursor(0, 0); lcd.print("1.The 2.Pass");
 lcd.setCursor(0, 1); lcd.print("*=Back");

 while (true) {
  char key = keypad.getKey();
  if (key == '1') { removeRFID(); return; }
  else if (key == '2') { removePassword(); return; }
  else if (key == '*') { showManageMenu(); return; }
 }
}

// THÊM THẺ RFID
void addRFID() {
 if (uidCount >= MAX_UIDS) {
  lcd.clear(); lcd.print("Full the!");
  delay(2000);
  showMainMenu();
  return;
 }

 lcd.clear(); lcd.print("Quet the moi:");
 while (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial());

 for (int i = 0; i < UID_SIZE; i++) {
  EEPROM.write(UID_ADDR + uidCount * UID_SIZE + i, mfrc522.uid.uidByte[i]);
 }

 uidCount++;
 EEPROM.write(UID_ADDR + (MAX_UIDS * UID_SIZE), uidCount);

 lcd.clear(); lcd.print("Da them the!");
 delay(2000);
 showMainMenu();
}

// XÓA THẺ RFID 
void removeRFID() {
 lcd.clear(); lcd.print("Quet the can xoa:");
 while (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial());

 int index = -1;
 for (int i = 0; i < uidCount; i++) {
  bool match = true;
  for (int j = 0; j < UID_SIZE; j++) {
   if (EEPROM.read(UID_ADDR + i * UID_SIZE + j) != mfrc522.uid.uidByte[j]) {
    match = false; break;
   }
  }
  if (match) { index = i; break; }
 }

 if (index >= 0) {
  for (int i = index; i < uidCount - 1; i++) {
   for (int j = 0; j < UID_SIZE; j++) {
    EEPROM.write(UID_ADDR + i * UID_SIZE + j,
          EEPROM.read(UID_ADDR + (i + 1) * UID_SIZE + j));
   }
  }
  uidCount--;
  EEPROM.write(UID_ADDR + (MAX_UIDS * UID_SIZE), uidCount);
  lcd.clear(); lcd.print("Da xoa the!");
 } else {
  lcd.clear(); lcd.print("Khong tim thay!");
 }
 delay(2000); showMainMenu();
}

// THÊM MẬT KHẨU
void addPassword() {
  if (passCount >= MAX_PASS) {
    lcd.clear(); lcd.print("Full pass!");
    delay(2000); showMainMenu();
    return;
  }

  lcd.clear(); lcd.print("Nhap pass moi:");
  String input = "";
  while (input.length() < 6) {
    char key = keypad.getKey();
    if (key && key != '*' && key != '#') {
      input += key;
      lcd.setCursor(input.length() - 1, 1); lcd.print("*");
    }
  }

  for (int i = 0; i < 6; i++) {
    EEPROM.write(PASS_ADDR + passCount * 6 + i, input[i]);
  }

  passCount++;
  EEPROM.write(PASS_ADDR + (MAX_PASS * 6), passCount);

  lcd.clear(); lcd.print("Da them pass!");
  delay(2000); showMainMenu();
}

// XÓA MẬT KHẨU
void removePassword() {
  lcd.clear(); lcd.print("Nhap pass can xoa:");
  String input = "";
  while (input.length() < 6) {
    char key = keypad.getKey();
    if (key && key != '*' && key != '#') {
      input += key;
      lcd.setCursor(input.length() - 1, 1); lcd.print("*");
    }
  }

  int index = -1;
  for (int i = 0; i < passCount; i++) {
    String storedPass = "";
    for (int j = 0; j < 6; j++) {
      storedPass += (char)EEPROM.read(PASS_ADDR + i * 6 + j);
    }
    if (storedPass == input) {
      index = i; break;
    }
  }

  if (index >= 0) {
    for (int i = index; i < passCount - 1; i++) {
      for (int j = 0; j < 6; j++) {
        EEPROM.write(PASS_ADDR + i * 6 + j,
                     EEPROM.read(PASS_ADDR + (i + 1) * 6 + j));
      }
    }
    passCount--;
    EEPROM.write(PASS_ADDR + (MAX_PASS * 6), passCount);
    lcd.clear(); lcd.print("Da xoa pass!");
  } else {
    lcd.clear(); lcd.print("Khong tim thay!");
  }
  delay(2000); showMainMenu();
}

// MỞ CỬA
void openDoor() {
  lcd.clear(); lcd.print("Mo cua thanh cong");
  lcd.setCursor(0, 1); lcd.print("Lan thu: ");
  lcd.print(openCount);
  delay(3000); showMainMenu();
}

// HIỂN THỊ SỐ LẦN MỞ CỬA
void showOpenCount() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Da mo: ");
  lcd.print(openCount);
  lcd.setCursor(0, 1);
  lcd.print("Nhan # de reset");

  unsigned long startTime = millis();  // bắt đầu đếm thời gian
  bool resetDone = false;

  // Vòng lặp kiểm tra phím nhấn trong 5 giây
  while (millis() - startTime < 5000) {
    char key = keypad.getKey();
    if (key == '#') {
      openCount = 0;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Da reset so lan");
      delay(2000);
      resetDone = true;
      break;
    }
  }
  if (!resetDone) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Khong reset");
    delay(1000);
  }
  showMainMenu();
}